{"version":3,"file":"component---src-pages-index-js-d53c8c7c9fa02bd6d8c0.js","mappings":"4OA8BA,MArBA,SAAkB,GAAU,IACpBA,EADoB,EAARC,KACJ,6BAAiC,gBAAGC,EAAH,cAAc,IAAI,EAAJ,EAAd,MACzCC,EAAa,CAAC,OAAJ,eCXiB,SAACH,GAClC,IAAMI,EAAc,IAApB,IAEA,OADAJ,EAAAA,SAAc,gCAAoB,SAAmB,mBAAcI,EAAAA,IAAd,UAC9C,gBAAsB,cAC3B,mBAAIC,GAAkB,EACtB,aAAIC,EAAyB,EAC7B,KDK4BC,CAA9B,KACMC,EAAmBL,EAAA,WAAqB,+BAAcM,KAC5D,GAAgCC,EAAAA,EAAAA,WAASF,IAAAA,EAAAA,EAAzC,GAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAmBC,EAAAA,EAAAA,cAAY,qBAAcF,EAAd,KAArC,IAEA,OACE,yBACE,qBAAKG,MAAM,cACX,qBAAoBA,MAAOZ,EAA3B,GAAiDa,SAAahB,EAAL,kBACzD,qBACEW,SADF,EAEEM,SAFF,EAGEC,KAHF,EAIElB,MAAOA","sources":["webpack://zoomkoding.com/./src/pages/index.js","webpack://zoomkoding.com/./src/utils/helpers.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport Post from '../models/post';\nimport CategoryPageHeader from '../components/category-page-header';\nimport { getUniqueCategories } from '../utils/helpers';\nimport PostTabs from '../components/post-tabs';\n\nfunction HomePage({ data }) {\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => new Post(node));\n  const categories = ['All', ...getUniqueCategories(posts)];\n  const featuredTabIndex = categories.findIndex((category) => category === 'featured');\n  const [tabIndex, setTabIndex] = useState(featuredTabIndex === -1 ? 0 : featuredTabIndex);\n  const onTabIndexChange = useCallback((e, value) => setTabIndex(value), []);\n\n  return (\n    <Layout>\n      <Seo title=\"yuzaalist\" />\n      <CategoryPageHeader title={categories[tabIndex]} subtitle={`${posts.length} posts`} />\n      <PostTabs\n        tabIndex={tabIndex}\n        onChange={onTabIndexChange}\n        tabs={categories}\n        posts={posts}\n      />\n    </Layout>\n  );\n}\n\nexport default HomePage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 500, truncate: true)\n          frontmatter {\n            categories\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n\n    site {\n      siteMetadata {\n        language\n        author {\n          name\n          bio {\n            role\n            description\n            thumbnail\n          }\n          social {\n            github\n            linkedIn\n            email\n          }\n        }\n      }\n    }\n  }\n`;\n","export const getUniqueCategories = (posts) => {\n  const categorySet = new Set();\n  posts.forEach(({ categories }) => categories.forEach((category) => categorySet.add(category)));\n  return [...categorySet].sort((a, b) => {\n    if (a === 'featured') return -1;\n    if (b === 'featured') return 1;\n    return 0;\n  });\n};\n"],"names":["posts","data","node","categories","categorySet","a","b","getUniqueCategories","featuredTabIndex","category","useState","tabIndex","setTabIndex","onTabIndexChange","useCallback","title","subtitle","onChange","tabs"],"sourceRoot":""}